default:
  tags:
    - shell
  before_script:
    - docker info
    - docker login -u $DOCKER_REGISTRY_USER -p $DOCKER_REGISTRY_PASSWORD $DOCKER_REGISTRY
  after_script:
    - docker push $DOCKER_REGISTRY/$CI_JOB_NAME:latest

variables:
  PY_VERSION: 3.9.7
  GIT_STRATEGY: none

stages:
  - environment
  - deploy

fetch-dockerfiles:
  stage: environment
  variables:
    GIT_STRATEGY: fetch
  script:
    - echo "Fetch Dockerfiles"
  artifacts:
    paths:
      - "*/Dockerfile"

ubuntu:
  stage: deploy
  needs: ["fetch-dockerfiles"]
  dependencies:
    - "fetch-dockerfiles"
  script:
    - docker build --build-arg DOCKER_REGISTRY=$DOCKER_REGISTRY -t $DOCKER_REGISTRY/$CI_JOB_NAME:latest $CI_JOB_NAME

ubuntu-python:
  needs: ["fetch-dockerfiles"]
  dependencies:
    - "fetch-dockerfiles"
  extends: "ubuntu"
  script:
    - docker build --build-arg DOCKER_REGISTRY=$DOCKER_REGISTRY -t $DOCKER_REGISTRY/$CI_JOB_NAME:$PY_VERSION $CI_JOB_NAME
  after_script:
    - docker push $DOCKER_REGISTRY/$CI_JOB_NAME:$PY_VERSION

alpine-python:
  needs: ["fetch-dockerfiles"]
  dependencies:
    - "fetch-dockerfiles"
  extends: "ubuntu-python"
  script:
    - docker build --build-arg DOCKER_REGISTRY=$DOCKER_REGISTRY -t $DOCKER_REGISTRY/$CI_JOB_NAME:$PY_VERSION $CI_JOB_NAME

debian-python:
  needs: ["fetch-dockerfiles"]
  dependencies:
    - "fetch-dockerfiles"
  extends: "ubuntu-python"
  script:
    - docker build --build-arg DOCKER_REGISTRY=$DOCKER_REGISTRY -t $DOCKER_REGISTRY/$CI_JOB_NAME:$PY_VERSION $CI_JOB_NAME
